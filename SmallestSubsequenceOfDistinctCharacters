class Solution {
    public String smallestSubsequence(String s) {
        Stack<Character> stack = new Stack<Character>();
        int[] count = new int[26];
        boolean[] visited = new boolean[26];

        for (char ch : s.toCharArray())
            count[ch - 'a']++;

        for (char ch : s.toCharArray()) {

            count[ch - 'a']--;

            if (visited[ch - 'a'])
                continue;

            while (!stack.isEmpty() && stack.peek() > ch
                    && count[stack.peek() - 'a'] > 0)
                visited[stack.pop() - 'a'] = false;

            stack.push(ch);
            visited[ch - 'a'] = true;
        }

        StringBuilder sb = new StringBuilder();
        while (!stack.isEmpty()) {
            sb.append(stack.pop());
        }

        return sb.reverse().toString();
    }
}
